package com.servinte.axioma.orm;

// Generated Apr 7, 2010 3:58:52 PM by Hibernate Tools 3.2.5.Beta

/**
 * VistaExcepcionesNaturalezaId generated by hbm2java
 */
public class VistaExcepcionesNaturalezaId implements java.io.Serializable {

	private Integer codigo;
	private String acrRegimen;
	private String nomRegimen;
	private Integer codNaturaleza;
	private String nomNaturaleza;
	private Boolean indicativoExcepcion;

	public VistaExcepcionesNaturalezaId() {
	}

	public VistaExcepcionesNaturalezaId(Integer codigo, String acrRegimen,
			String nomRegimen, Integer codNaturaleza, String nomNaturaleza,
			Boolean indicativoExcepcion) {
		this.codigo = codigo;
		this.acrRegimen = acrRegimen;
		this.nomRegimen = nomRegimen;
		this.codNaturaleza = codNaturaleza;
		this.nomNaturaleza = nomNaturaleza;
		this.indicativoExcepcion = indicativoExcepcion;
	}

	public Integer getCodigo() {
		return this.codigo;
	}

	public void setCodigo(Integer codigo) {
		this.codigo = codigo;
	}

	public String getAcrRegimen() {
		return this.acrRegimen;
	}

	public void setAcrRegimen(String acrRegimen) {
		this.acrRegimen = acrRegimen;
	}

	public String getNomRegimen() {
		return this.nomRegimen;
	}

	public void setNomRegimen(String nomRegimen) {
		this.nomRegimen = nomRegimen;
	}

	public Integer getCodNaturaleza() {
		return this.codNaturaleza;
	}

	public void setCodNaturaleza(Integer codNaturaleza) {
		this.codNaturaleza = codNaturaleza;
	}

	public String getNomNaturaleza() {
		return this.nomNaturaleza;
	}

	public void setNomNaturaleza(String nomNaturaleza) {
		this.nomNaturaleza = nomNaturaleza;
	}

	public Boolean getIndicativoExcepcion() {
		return this.indicativoExcepcion;
	}

	public void setIndicativoExcepcion(Boolean indicativoExcepcion) {
		this.indicativoExcepcion = indicativoExcepcion;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof VistaExcepcionesNaturalezaId))
			return false;
		VistaExcepcionesNaturalezaId castOther = (VistaExcepcionesNaturalezaId) other;

		return ((this.getCodigo() == castOther.getCodigo()) || (this
				.getCodigo() != null
				&& castOther.getCodigo() != null && this.getCodigo().equals(
				castOther.getCodigo())))
				&& ((this.getAcrRegimen() == castOther.getAcrRegimen()) || (this
						.getAcrRegimen() != null
						&& castOther.getAcrRegimen() != null && this
						.getAcrRegimen().equals(castOther.getAcrRegimen())))
				&& ((this.getNomRegimen() == castOther.getNomRegimen()) || (this
						.getNomRegimen() != null
						&& castOther.getNomRegimen() != null && this
						.getNomRegimen().equals(castOther.getNomRegimen())))
				&& ((this.getCodNaturaleza() == castOther.getCodNaturaleza()) || (this
						.getCodNaturaleza() != null
						&& castOther.getCodNaturaleza() != null && this
						.getCodNaturaleza()
						.equals(castOther.getCodNaturaleza())))
				&& ((this.getNomNaturaleza() == castOther.getNomNaturaleza()) || (this
						.getNomNaturaleza() != null
						&& castOther.getNomNaturaleza() != null && this
						.getNomNaturaleza()
						.equals(castOther.getNomNaturaleza())))
				&& ((this.getIndicativoExcepcion() == castOther
						.getIndicativoExcepcion()) || (this
						.getIndicativoExcepcion() != null
						&& castOther.getIndicativoExcepcion() != null && this
						.getIndicativoExcepcion().equals(
								castOther.getIndicativoExcepcion())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result
				+ (getCodigo() == null ? 0 : this.getCodigo().hashCode());
		result = 37
				* result
				+ (getAcrRegimen() == null ? 0 : this.getAcrRegimen()
						.hashCode());
		result = 37
				* result
				+ (getNomRegimen() == null ? 0 : this.getNomRegimen()
						.hashCode());
		result = 37
				* result
				+ (getCodNaturaleza() == null ? 0 : this.getCodNaturaleza()
						.hashCode());
		result = 37
				* result
				+ (getNomNaturaleza() == null ? 0 : this.getNomNaturaleza()
						.hashCode());
		result = 37
				* result
				+ (getIndicativoExcepcion() == null ? 0 : this
						.getIndicativoExcepcion().hashCode());
		return result;
	}

}
